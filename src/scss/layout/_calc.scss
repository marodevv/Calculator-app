@use '../abstracts' as *;
@use '../core' as *;
// Calculator
:root {
  @include media($br-1) {
    --calc-width: 35rem;
    --grid-rows: 4rem;
    --grid-columns: 6.5rem;
  }
  @include media($br-2) {
    --calc-width: 30rem;
    --grid-rows: 3rem;
    --grid-columns: 5.5rem;
  }
  @include media($br-3) {
    --switcher-width: 4.75rem;
    --switcher-height: 1.35rem;
    --switch-dims: 0.9rem;
    --calc-width: 27rem;
    --grid-rows: 2.75rem;
    --grid-columns: 4.5rem;
  }
  @include media($br-4) {
    --calc-width: 23rem;
    --grid-rows: 2.5rem;
    --grid-columns: 3.5rem;
  }
  @include media($br-5) {
    --switcher-width: 4.5rem;
    --switcher-height: 1rem;
    --switch-dims: 0.55rem;
    --spacing: 1.5rem;
    --calc-width: 17.5rem;
    --grid-rows: 2rem;
    --grid-columns: 3rem;
    --gap: 1.25rem;
  }
}
body {
  background: var(--clr-main-bg);
  padding: calc(var(--spacing) / 2);
}
section {
  width: var(--calc-width);
  margin: var(--spacing) auto;
  &:first-child {
    --spacing: 4rem;
    @include media($br-3) {
      --spacing: 2rem;
    }
  }
  // Header
  &.header {
    @include flex-row(space-between);
    .theme {
      @include flex-row(space-between, center, calc(var(--spacing) / 2));
      .switch-container {
        p {
          margin: {
            top: -1.45rem;
            left: 0.5rem;
          }
        }
        .switcher {
          width: var(--switcher-width);
          height: var(--switcher-height);
          border-radius: 2.5rem;
          background: var(--clr-toggle-bg);
          position: relative;
          cursor: pointer;
          .switch {
            width: var(--switch-dims);
            height: var(--switch-dims);
            border-radius: 1.5rem;
            background: var(--key-bg-2);
            position: absolute;
            top: 0.25rem;
            left: 0.15rem;
            margin-left: 0;
          }
        }
      }
    }
  }
  &.output {
    background: var(--clr-screen-bg);
    border-radius: var(--border);
    padding: calc(var(--spacing) / 2);
  }
  &.input {
    background: var(--clr-toggle-bg);
    display: grid;
    place-content: center;
    grid-template-rows: repeat(5, var(--grid-rows));
    grid-template-columns: repeat(4, var(--grid-columns));
    grid-gap: var(--gap);
    padding: var(--spacing) 0;
    border-radius: var(--border);

    & * {
      border-radius: var(--border);
    }
    .special-button:last-child {
      grid-column: 1 / 3;
      grid-row: 5;
    }
    .for-grid {
      grid-column: 3 / 5;
      grid-row: 5;
    }

    .btn.disabled {
      pointer-events: none;
      box-shadow: none;
      opacity: 0.9;
    }
    // a mixin for backgrounds and shadow
    .basic-button {
      @include button(basic);
    }
    .operator-button {
      @include button(operator);
    }
    .special-button {
      @include button(special);
    }
    .equal-button {
      @include button(equal);
    }
  }
}
